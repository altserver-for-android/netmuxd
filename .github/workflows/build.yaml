name: build

on:
  push:
  workflow_dispatch:                                  # Allow to manually trigger workflow.

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      # rusty_libimobiledevice
      ## libusbmuxd

      - name: prepare environment
        run: |
            echo "target_triplet=`gcc -dumpmachine`" >> $GITHUB_ENV
      - name: fetch libplist
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          name: libplist-latest_${{env.target_triplet}}
          repo: libimobiledevice/libplist
      - name: fetch libimobiledevice-glue
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          name: libimobiledevice-glue-latest_${{env.target_triplet}}
          repo: libimobiledevice/libimobiledevice-glue
      - name: install external dependencies
        run: |
            mkdir extract
            for I in *.tar; do
              tar -C extract -xvf $I
            done
            sudo cp -r extract/* /
            sudo ldconfig
      - uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'libimobiledevice/libusbmuxd'
      - name: autogen
        run: ./autogen.sh PKG_CONFIG_PATH=/usr/local/lib/pkgconfig LDFLAGS="-Wl,-rpath=/usr/local/lib"
      - name: make
        run: make
      - name: make install
        run: sudo make install


     # Cargo Build
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
